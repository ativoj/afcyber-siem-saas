# Kickstart configuration for AfCyber SIEM Platform on Alma Linux 9
# Author: AfCyber Labs
# Version: 1.0.0
#
# This file automates the installation of Alma Linux for building a production-ready
# VM image using Packer. It includes optimized partitioning, security hardening,
# and essential package selection for a SIEM workload.

#===============================================================================
# Installation & System Configuration
#===============================================================================

# Use text mode for installation
text

# Use URL for installation source
url --url="https://repo.almalinux.org/almalinux/9/BaseOS/x86_64/os/"

# System language and keyboard layout
lang en_US.UTF-8
keyboard --vckeymap=us --xlayouts='us'

# Network configuration (DHCP for Packer build environment)
network --bootproto=dhcp --device=link --activate --onboot=yes
network --hostname=afcyber-siem.local

# Set timezone to UTC for consistency in logging
timezone Etc/UTC --isUtc

# Configure bootloader
bootloader --location=mbr --boot-drive=sda

# Root password for the build process (will be changed/disabled)
rootpw --plaintext a_very_secure_packer_password

# Enable SSH daemon during installation for Packer
sshd

# Reboot after installation is complete
reboot

# Skip the initial setup wizard on first boot
firstboot --disable

# Accept the End User License Agreement
eula --agreed

# Do not configure X Window System
skipx

# Security settings
# SELinux is set to enforcing mode for production security
selinux --enforcing
# Firewall is enabled by default with specific ports opened in %post
firewall --enabled --ssh

#===============================================================================
# Partitioning Scheme (LVM for flexibility)
# Optimized for SIEM workloads with separate partitions for critical directories.
#===============================================================================

# Clear all partitions on the disk and initialize a new partition table
clearpart --all --initlabel

# Create a standard /boot partition
part /boot --fstype="xfs" --size=1024

# Create a physical volume to hold the rest of the data
# --grow allows it to use all remaining space
part pv.01 --fstype="lvmpv" --ondisk=sda --size=1 --grow

# Create a volume group named 'vg_afcyber' on the physical volume
volgroup vg_afcyber --pesize=4096 pv.01

# Create logical volumes for the system
# / (root) - 50GB for OS and applications
logvol / --vgname=vg_afcyber --size=51200 --name=lv_root --fstype="xfs"
# swap - 8GB (adjust based on system RAM)
logvol swap --vgname=vg_afcyber --size=8192 --name=lv_swap --fstype="swap"
# /home - 20GB for user data
logvol /home --vgname=vg_afcyber --size=20480 --name=lv_home --fstype="xfs"
# /opt - 100GB for application binaries and libraries (AfCyber SIEM)
logvol /opt --vgname=vg_afcyber --size=102400 --name=lv_opt --fstype="xfs"
# /var/log/audit - 10GB for immutable audit logs
logvol /var/log/audit --vgname=vg_afcyber --size=10240 --name=lv_audit --fstype="xfs"
# /var/log - 50GB for general system and application logs
logvol /var/log --vgname=vg_afcyber --size=51200 --name=lv_log --fstype="xfs"
# /var - Remaining space for container data, databases, and other variable data.
# --grow allows it to use all remaining space in the volume group.
logvol /var --vgname=vg_afcyber --size=1 --grow --name=lv_var --fstype="xfs"

#===============================================================================
# Package Selection
#===============================================================================

%packages --nobase --ignoremissing
@core
@standard
# Essential tools for system administration and Packer provisioners
curl
wget
git
vim
htop
net-tools
unzip
jq
# Yum/DNF utilities
yum-utils
# SELinux and firewall tools
policycoreutils-python-utils
setools-console
firewalld
# Time synchronization
chrony
# Logging
logrotate
# SSL/TLS tools
openssl
# Python for Ansible and custom scripts
python3-pip
# Cloud-init for post-deployment customization
cloud-init
cloud-utils-growpart
# Kernel development tools for compiling drivers if needed
kernel-devel
# Build tools
gcc
make
%end

#===============================================================================
# Post-Installation Script
# This script runs in a chroot environment after packages are installed.
#===============================================================================

%post --log=/root/ks-post.log

# --- User Setup for Packer ---
echo "Creating packer user for provisioning"
# Create the 'packer' user
/usr/sbin/useradd packer -c "Packer User"
# Set the password for the 'packer' user
echo "a_very_secure_packer_password" | passwd --stdin packer
# Grant passwordless sudo privileges to the 'packer' user
echo "packer ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/packer
chmod 0440 /etc/sudoers.d/packer

# --- SSH Configuration for Packer ---
echo "Configuring SSH for Packer access"
# Allow password authentication for the build process
sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
# Use DNS for faster SSH connections
echo "UseDNS no" >> /etc/ssh/sshd_config

# --- Firewall Configuration ---
echo "Configuring firewall rules"
# Ports for Web UIs, APIs, and services
FIREWALL_TCP_PORTS="80 443 3000 5601 9000 9001 8080 8889"
# Ports for data ingestion
FIREWALL_INGEST_PORTS="514/udp 1514/tcp 1515/tcp 12201/udp 8000/tcp"

for port in $FIREWALL_TCP_PORTS; do
    firewall-cmd --permanent --add-port=$port/tcp
done

for port in $FIREWALL_INGEST_PORTS; do
    firewall-cmd --permanent --add-port=$port
done

# Reload firewall to apply rules
firewall-cmd --reload

# --- System Services ---
echo "Enabling essential services"
# Enable time synchronization
systemctl enable chronyd

# --- System Identification ---
echo "Creating custom Message of the Day (MOTD)"
cat > /etc/motd << EOF
===============================================================================
  Welcome to the AfCyber SIEM Platform Appliance

  This image was built on: $(date)
  Alma Linux Version: $(cat /etc/almalinux-release)
===============================================================================
EOF

# --- Final Cleanup ---
echo "Performing final cleanup"
# Clean DNF cache
dnf clean all
# Remove temporary files
rm -rf /tmp/*
# Truncate logs to create a clean image
find /var/log -type f -exec truncate --size 0 {} \;

echo "Kickstart post-installation script finished."

%end
